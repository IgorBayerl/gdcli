name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on tags like v1.2.3
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        default: 'v0.1.0'

permissions:
  contents: write  # Allows the token to push changes, create releases, etc.

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.5'

      # Build steps
      - name: Build Linux Binary
        run: |
          GOOS=linux GOARCH=amd64 go build -ldflags "-X main.version=${{ github.ref_name }} -X main.commit=${{ github.sha }} -X main.buildTime=$(date -u '+%Y-%m-%d_%H:%M:%S')" -o gdcli-linux .

      - name: Build Windows Binary
        run: |
          GOOS=windows GOARCH=amd64 go build -ldflags "-X main.version=${{ github.ref_name }} -X main.commit=${{ github.sha }} -X main.buildTime=$(date -u '+%Y-%m-%d_%H:%M:%S')" -o gdcli.exe .

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Store upload URL
        run: echo "UPLOAD_URL=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_ENV

      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./gdcli-linux
          asset_name: gdcli-linux
          asset_content_type: application/octet-stream

      - name: Upload Windows Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./gdcli.exe
          asset_name: gdcli.exe
          asset_content_type: application/octet-stream

      - name: Dispatch event to gdcli-choco
        if: ${{ success() }}
        env:
          GH_ACTIONS_PAT: ${{ secrets.GH_ACTIONS_PAT }}
        run: |
          VERSION=$(echo "${{ github.ref_name }}" | sed 's/^v//')
          echo "Triggering update in gdcli-choco for version $VERSION"
          
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_ACTIONS_PAT" \
            --data "{\"event_type\": \"gdcli_release\", \"client_payload\": {\"version\": \"$VERSION\"}}" \
            https://api.github.com/repos/IgorBayerl/gdcli-choco/dispatches
